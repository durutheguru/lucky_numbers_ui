name: Dev Branch Merge

on:
  push:
    branches: 
      - dev
      

jobs:
  test:
    name: Building Development Branch
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
      env:
        CI: true

          
      
  docker:
      name: Docker build and push
      runs-on: ubuntu-latest
      needs: [test]
      
      strategy:
        matrix:
          node-version: [12.x]
      
      steps:    
        - uses: actions/checkout@v2
        - name: Fetching All
          run: |
            git fetch --prune --unshallow
        - name: Installing GitVersion
          uses: gittools/actions/gitversion/setup@v0.9.2
          with:
              versionSpec: '5.2.x'
        - name: Use GitVersion
          id: gitversion
          uses: gittools/actions/gitversion/execute@v0.9.2
        - name: Build Project
          run: |
            npm run gulp && npm run build
        - name: Dir Contents
          run: |
            ls
        - name: Login to Docker
          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PWD }}
        - name: Build Docker Image
          run: |
            RELEASE_TAG=${{ steps.gitversion.outputs.majorMinorPatch }}
            docker build -t lucky_numbers_ui:$RELEASE_TAG -t ${{ secrets.DOCKER_USER }}/lucky_numbers_ui:$RELEASE_TAG . 
        - name: Publish Docker image
          run: |
            RELEASE_TAG=${{ steps.gitversion.outputs.majorMinorPatch }}
            docker push ${{ secrets.DOCKER_USER }}/lucky_numbers_ui:$RELEASE_TAG
            echo "Pushed Docker Image with New Release"
        - name: Upgrading Version
          run: |
            RELEASE_TAG=${{ steps.gitversion.outputs.majorMinorPatch }}
            echo $RELEASE_TAG > version.ver
            ls
            git config user.email ${{ secrets.GIT_EMAIL }}
            git config user.name ${{ secrets.GIT_USERNAME }}
            git add .
            git commit -m "Upgraded Version >> $RELEASE_TAG" || true
        - name: Push changes
          uses: ad-m/github-push-action@master
          with:
            branch: dev
            github_token: ${{ secrets.GIT_TOKEN }}
            
            
  kube-deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [docker]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Fetching
      run: |
        git fetch --all
    - name: Merge to Master
      uses: devmasx/merge-branch@v1.1.0
      with:
        type: now
        target_branch: 'master'
      env:
        GITHUB_TOKEN: ${{secrets.GIT_TOKEN}}
    - name: Set Kube Deployment Version
      run: |
        ls
        VERSION=$(<version.ver)
        sed -i s/{{image-placeholder}}/lucky_numbers_ui:$VERSION/g kube/manifests/app/deployment.yaml
        cat kube/manifests/app/deployment.yaml
    - name: Deploying to Cluster
      uses: steebchen/kubectl@master
      env:
        KUBECTL_VERSION: "1.17"
        KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
      with:
        args: apply -f kube/manifests/app
        
